version: '3.8'
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-core:
    image: postgres:17
    container_name: postgres_core_db
    restart: always
    environment:
      POSTGRES_USER: coreuser
      POSTGRES_PASSWORD: corepassword
      POSTGRES_DB: coredb
    ports:
      - "5433:5432"
    volumes:
      - postgres_core_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "coredb"]
      interval: 5s
      timeout: 3s
      retries: 5

  postgres-loan:
    image: postgres:17
    container_name: postgres_loan_db
    restart: always
    environment:
      POSTGRES_USER: loanuser
      POSTGRES_PASSWORD: loanpassword
      POSTGRES_DB: loandb
    ports:
      - "5434:5432"
    volumes:
      - postgres_loan_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "loandb"]
      interval: 5s
      timeout: 3s
      retries: 5

  postgres-user:
    image: postgres:17
    container_name: postgres_user_db
    restart: always
    environment:
      POSTGRES_USER: useruser
      POSTGRES_PASSWORD: userpassword
      POSTGRES_DB: userdb
    ports:
      - "5435:5432"
    volumes:
      - postgres_user_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "userdb"]
      interval: 5s
      timeout: 3s
      retries: 5

  postgres-pref:
    image: postgres:17
    container_name: postgres_pref_db
    restart: always
    environment:
      POSTGRES_USER: prefuser
      POSTGRES_PASSWORD: prefpassword
      POSTGRES_DB: prefdb
    ports:
      - "5436:5432"
    volumes:
      - postgres_pref_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "prefdb"]
      interval: 5s
      timeout: 3s
      retries: 5

  postgres-moni:
    image: postgres:17
    container_name: postgres_moni_db
    restart: always
    environment:
      POSTGRES_USER: moniuser
      POSTGRES_PASSWORD: monipassword
      POSTGRES_DB: monidb
    ports:
      - "5437:5432"
    volumes:
      - postgres_moni_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "monidb"]
      interval: 5s
      timeout: 3s
      retries: 5

  coreservice:
    build:
      context: ./CoreService
    depends_on:
      postgres-core:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres-core;Port=5432;Database=coredb;Username=coreuser;Password=corepassword

  loanservice:
    build:
      context: ./LoanService
    depends_on:
      postgres-loan:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres-loan;Port=5432;Database=loandb;Username=loanuser;Password=loanpassword

  userservice:
    build:
      context: ./UserService
    depends_on:
      postgres-user:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "5003:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres-user;Port=5432;Database=userdb;Username=useruser;Password=userpassword

  prefservice:
    build:
      context: ./PreferenceService
    depends_on:
      postgres-pref:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "5004:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres-pref;Port=5432;Database=prefdb;Username=prefuser;Password=prefpassword

  moniservice:
    build:
      context: ./MonitorService
    depends_on:
      postgres-moni:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "5005:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres-moni;Port=5432;Database=monidb;Username=moniuser;Password=monipassword

volumes:
  postgres_core_data:
  postgres_loan_data:
  postgres_user_data:
  postgres_pref_data:
  postgres_moni_data:
